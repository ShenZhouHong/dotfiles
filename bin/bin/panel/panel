#! /bin/bash

PANEL_FIFO=/tmp/panel-fifo
PANEL_FIFO_2=/tmp/panel-fifo-2
CLOCK_FIFO=/tmp/panel-clock-fifo
PANEL_HEIGHT=36
PANEL_WIDTH=1910
PANEL_GAP=5
PANEL_Y=5
#PANEL_FONT_FAMILY="Source Code Pro for Powerline:size=12"
PANEL_FONT_FAMILY="-gohu-*-medium-*-*-*-14-*-*-*-*-*-*-*"
PANEL_FONT_FAMILY="Inconsolata for Powerline:size=14"
# PANEL_FONT_FAMILY="Monofur for Powerline:size=15"
ICON_FONT="FontAwesome:size=14"
ICON_FONT_2="Weather Icons:size=14"
dzencommand_music="~/bin/bar/dzen2/scripts/mpdzen"
dzencommand_calendar="zsh ~/bin/bar/dzen2/calendar"
dkeyboard="~/bin/dkeyboard"
MAILDIR="$HOME/Maildir/School/INBOX/new"
MAILCOMMAND="thunderbird"
#ICON_FONT2="fontcustom:size=17"
# export PANEL_FIFO PANEL_HEIGHT PANEL_FONT_FAMILY

if [ $(pgrep -cx panel) -gt 1 ] ; then
    printf "%s\n" "The panel is already running." >&2 exit 1
fi

# trap 'trap - TERM; kill 0' INT TERM QUIT EXIT


init() {
    source api_keys.sh
    source modules.sh
    . panel_colors light
    mkfifo "$PANEL_FIFO_2"
    mkfifo "$CLOCK_FIFO"
    mkfifo "$PANEL_FIFO"
    bspc subscribe > "$PANEL_FIFO" &
}

clean() {
    rm "$PANEL_FIFO"
    rm "$PANEL_FIFO_2"
    rm "$CLOCK_FIFO"
}

shutdown() {
    clean
    # Get our process group id
    PGID=$(ps -o pgid= $$ | grep -o [0-9]*)

    # Kill it in a new new process group
    setsid kill -- -$PGID
    exit 0
}

trap shutdown EXIT SIGINT SIGTERM

loop() {
    i=0
    while true; do
        keyboard &
        battery &
        music &
        wifi & 
        wallpaper &
        alsa_volume &
        if (( i % 60 == 0 )); then 
            clock & 
            calendar &
        fi
        if (( i % 400 == 0 )); then
            mail &
            pollution & 
            weather &
        fi
        i=$((i+1))
        # Just in case $i gets enormously large and causes problems. 
        # The value in brackets should be a multiple of the other cycles' values
        (( i >= 1600 )) && i=0 
        sleep 1
    done > $PANEL_FIFO 2>/dev/null &
}

main() {
    init
    loop
    PANEL_WM_NAME="bar_wmname"
    cat "$PANEL_FIFO" | panel_bar 1 | lemonbar -d -n "$PANEL_WM_NAME" -a 20 -o -4 -g $PANEL_WIDTH\x$PANEL_HEIGHT+$PANEL_GAP+$PANEL_GAP -f "$PANEL_FONT_FAMILY" -f "$POWERLINE_FONT" -f "$ICON_FONT" -f "$ICON_FONT_2" -F "$COLOR_FOREGROUND" -B "$COLOR_BACKGROUND" -u 2|  zsh &

    # cat "$PANEL_FIFO_2" | panel_bar 2 | lemonbar -g 1910x$PANEL_HEIGHT+1365+5 -f "$PANEL_FONT_FAMILY" -f "$POWERLINE_FONT" -f "$ICON_FONT" -f "$ICON_FONT_2" -F "$COLOR_FOREGROUND" -B "$COLOR_BACKGROUND" -u 2 |  zsh &


    d=$(xdo id -a "$PANEL_WM_NAME")
    tries_left=20
    while [ -z "$wid" -a "$tries_left" -gt 0 ] ; do
            sleep 0.05
            wid=$(xdo id -a "$PANEL_WM_NAME")
            tries_left=$((tries_left - 1))
    done

    [ -n "$wid" ] && xdo above -t "$(xdo id -N Bspwm -n root | sort | head -n 1)" "$wid"

    wait
}

main
